{"version":3,"file":"static/js/40.9a18296e.chunk.js","mappings":"mJAGMA,EAAc,WAClB,OAA2CC,EAAAA,EAAAA,GAAiB,IAA5D,eAAOC,EAAP,KAAoBC,EAApB,KAEA,OACE,kBACEC,GAAG,cACHC,UAAU,gCACVC,KAAK,SACLC,KAAK,cACLC,YAAY,8CACZC,MAAOP,EACPQ,SAAUP,KAKhB,WAAeQ,EAAAA,EAAAA,MAAKX,I,4CCNpB,IATiB,SAAIY,GACnB,OAA0BC,EAAAA,EAAAA,UAAYD,GAAtC,eAAOH,EAAP,KAAcK,EAAd,KAKA,MAAO,CAACL,GAFQM,EAAAA,EAAAA,cAAY,SAACC,GAAD,OAAYF,EAASE,EAAEC,cAAcR,SAAQ,IAEjDK","sources":["components/SearchInput/index.tsx","hooks/useInput.ts"],"sourcesContent":["import React, { memo } from 'react';\r\nimport useInput from '../../hooks/useInput';\r\n\r\nconst SearchInput = () => {\r\n  const [searchValue, onChangeSearchValue] = useInput<string>('');\r\n\r\n  return (\r\n    <input\r\n      id=\"searchValue\"\r\n      className=\"rounded-lg text-center border\"\r\n      type=\"search\"\r\n      name=\"searchValue\"\r\n      placeholder=\"도서명으로 검색\"\r\n      value={searchValue}\r\n      onChange={onChangeSearchValue}\r\n    />\r\n  );\r\n};\r\n\r\nexport default memo(SearchInput);\r\n","import { ChangeEvent, Dispatch, SetStateAction, useCallback, useState } from 'react';\r\n\r\ntype ReturnTypes<T> = [T, (e: ChangeEvent<HTMLInputElement>) => void, Dispatch<SetStateAction<T>>];\r\n\r\nconst useInput = <T>(initialValue: T): ReturnTypes<T> => {\r\n  const [value, setValue] = useState<T>(initialValue);\r\n\r\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n  const handler = useCallback((e: any) => setValue(e.currentTarget.value), []);\r\n\r\n  return [value, handler, setValue];\r\n};\r\n\r\nexport default useInput;\r\n"],"names":["SearchInput","useInput","searchValue","onChangeSearchValue","id","className","type","name","placeholder","value","onChange","memo","initialValue","useState","setValue","useCallback","e","currentTarget"],"sourceRoot":""}