{"version":3,"file":"static/js/515.4eb9de84.chunk.js","mappings":"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","sources":["hooks/useAppSelector.ts","utils/getBooksInfo.ts","page/MainPage/index.tsx"],"sourcesContent":["import { useSelector as useReduxSelector, TypedUseSelectorHook } from 'react-redux';\r\nimport { RootState } from '../modules/reducers';\r\n\r\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useReduxSelector;\r\n","import axios from 'axios';\r\nimport { ResType } from '../typings/resType';\r\n\r\nconst getBooksInfo = async (page: number, value: string): Promise<ResType> => {\r\n  // const baseURL = encodeURI(\r\n  //   `https://dapi.kakao.com/v3/search/book?target=title&sort=accuracy&page=${page}&size=10&query=${value}`,\r\n  // );\r\n  const baseURL = encodeURI(`https://annyhpk.run.goorm.io/searchBookInfo?page=${page}&value=${value}`);\r\n  // return await axios.get(baseURL, {\r\n  //   headers: { Authorization: `KakaoAK ${process.env.REACT_APP_KAKAO_API}` },\r\n  // });\r\n  const data = await axios.get(baseURL).then((res) => {\r\n    console.dir(res);\r\n    return res;\r\n  });\r\n\r\n  return data;\r\n};\r\n\r\nexport default getBooksInfo;\r\n","import React, { useCallback, useState, FC, useMemo, useRef } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport { BookInfo } from '../../typings/resType';\nimport { RootState } from '../../modules/reducers';\n\nimport { useAppSelector } from '../../hooks/useAppSelector';\nimport getBooksInfo from '../../utils/getBooksInfo';\n\nconst SearchResultModal = React.lazy(() => import('../../components/SearchResultModal'));\nconst Pagination = React.lazy(() => import('../../components/Pagination'));\nconst MainBookList = React.lazy(() => import('../../components/MainBookList'));\nconst SearchInput = React.lazy(() => import('../../components/SearchInput'));\n\nconst MainPage: FC = () => {\n  const navigate = useNavigate();\n  const { page } = useParams<{ page: string }>();\n  const pageNum = useMemo(() => parseInt(page || '1'), [page]);\n\n  // 현재 페이지 상태 정보\n  const [searchValue, setSearchValue] = useState<string>('');\n  const [searchResultInfo, setSearchResultInfo] = useState<BookInfo[]>([]);\n  const modalRef = useRef<HTMLDialogElement>(null);\n\n  // 현재 페이지에 로드할 데이터 범위 계산\n  const [firstArticle, endArticle] = useMemo(() => [(pageNum - 1) * 15, 15 * pageNum], [pageNum]);\n  const booksInfo = useAppSelector((state: RootState) => {\n    const booksInfoPerPage = Object.values(state.book.documents).slice(firstArticle, endArticle);\n    const totalBook = Object.keys(state.book.documents).length;\n\n    return {\n      booksInfo: booksInfoPerPage,\n      length: totalBook,\n    };\n  });\n  const pageOfBooksInfo = useMemo(() => booksInfo.booksInfo, [booksInfo]);\n\n  // 페이지당 데이터\n  const dataPerPage = useMemo(() => 15 as const, []);\n  // 전체 페이지 계산\n  const totalPage = useMemo(() => Math.ceil(booksInfo.length / dataPerPage), [booksInfo.length, dataPerPage]);\n\n  // 모달창 닫기\n  const onCloseModal = useCallback(() => {\n    modalRef.current?.removeAttribute('open');\n  }, []);\n\n  // 책정보 요청 함수\n  const bookDataLoad = useCallback(\n    (pageNum: number, searchQuery = searchValue) => {\n      return getBooksInfo(pageNum, searchQuery)\n        .then((response) => {\n          setSearchResultInfo((prev) => [...prev, ...response.data.documents]);\n          // 마지막 페이지 여부 전달\n          return response.data.meta.is_end;\n        })\n        .catch((err) => {\n          throw new Error('BookDataLoad job result failed', { cause: err });\n        });\n    },\n    [searchValue, setSearchResultInfo],\n  );\n\n  // 책검색\n  const onSearchBook = useCallback(\n    async (e: React.FormEvent<HTMLFormElement>) => {\n      e.preventDefault();\n      const formData = new FormData(e.currentTarget);\n      const searchQuery = formData.get('searchValue') as string;\n      if (searchQuery.trim() === '' && !searchQuery.trim().length) {\n        return null;\n      }\n      setSearchResultInfo([]);\n      setSearchValue(searchQuery);\n      try {\n        // 책정보 정보 로드\n        await bookDataLoad(pageNum, searchQuery);\n        // 모달창 오픈\n        modalRef.current?.setAttribute('open', 'true');\n      } catch (error) {\n        if (error instanceof Error) console.log(`Caused by ${error?.cause}`);\n      }\n    },\n    [bookDataLoad, pageNum, setSearchValue],\n  );\n\n  if (isNaN(pageNum) || !pageNum || pageNum > totalPage) {\n    navigate('/notFound');\n  }\n\n  return (\n    <div className=\"h-screen pt-8 mx-0 md:pt-16\">\n      <header className=\"flex w-full h-10 justify-around flex-wrap flex-row\">\n        {/* 로고 */}\n        <div className=\"inline-flex flex-nowrap\">\n          <svg\n            xmlns=\"http://www.w3.org/2000/svg\"\n            className=\"h-6 w-6\"\n            fill=\"none\"\n            viewBox=\"0 0 24 24\"\n            stroke=\"currentColor\"\n            strokeWidth={2}\n          >\n            <path\n              strokeLinecap=\"round\"\n              strokeLinejoin=\"round\"\n              d=\"M12 6.253v13m0-13C10.832 5.477 9.246 5 7.5 5S4.168 5.477 3 6.253v13C4.168 18.477 5.754 18 7.5 18s3.332.477 4.5 1.253m0-13C13.168 5.477 14.754 5 16.5 5c1.747 0 3.332.477 4.5 1.253v13C19.832 18.477 18.247 18 16.5 18c-1.746 0-3.332.477-4.5 1.253\"\n            />\n          </svg>\n          <b className=\"sm:text-base md:text-3xl\">도서 관리 시스템</b>\n        </div>\n        {/* 책정보 검색창 */}\n        <form className=\"pt-1 h-10\" onSubmit={onSearchBook}>\n          <SearchInput />\n          <button\n            className=\"g-white dark:text-gray-100 hover:bg-gray-500 font-semibold py-0.7 px-3 border border-gray-400 rounded shadow\"\n            type=\"submit\"\n          >\n            검색\n          </button>\n        </form>\n      </header>\n      <main className=\"Container flex flex-col mt-8 mx-3 sm:mt-4 md:mx-8 lg:mx-24 justify-center\">\n        <table className=\"table-auto border-separate text-center\">\n          {/* 테이블 헤더 */}\n          <thead>\n            <tr className=\"whitespace-nowrap\">\n              <th>(상태) 도서명</th>\n              <th>글쓴이</th>\n              <th>보유</th>\n              <th>출판일</th>\n            </tr>\n          </thead>\n          {/* 책정보 로드 */}\n          <tbody>\n            <MainBookList pageOfBooksInfo={pageOfBooksInfo} pageNum={pageNum} />\n          </tbody>\n        </table>\n      </main>\n      {/* 페이지네이션 부분 */}\n      <Pagination currentPage={pageNum} totalPage={totalPage} />\n\n      {/* 책 검색 결과 모달창 */}\n      <dialog id=\"dialog\" ref={modalRef}>\n        <SearchResultModal\n          onCloseModal={onCloseModal}\n          searchResultInfo={searchResultInfo}\n          bookDataLoad={bookDataLoad}\n        />\n      </dialog>\n    </div>\n  );\n};\n\nexport default MainPage;\n"],"names":["useAppSelector","useReduxSelector","getBooksInfo","page","value","baseURL","encodeURI","axios","then","res","console","dir","data","SearchResultModal","React","Pagination","MainBookList","SearchInput","navigate","useNavigate","useParams","pageNum","useMemo","parseInt","useState","searchValue","setSearchValue","searchResultInfo","setSearchResultInfo","modalRef","useRef","firstArticle","endArticle","booksInfo","state","Object","values","book","documents","slice","length","keys","pageOfBooksInfo","dataPerPage","totalPage","Math","ceil","onCloseModal","useCallback","current","removeAttribute","bookDataLoad","searchQuery","response","prev","meta","is_end","catch","err","Error","cause","onSearchBook","e","preventDefault","formData","FormData","currentTarget","get","trim","setAttribute","log","isNaN","className","xmlns","fill","viewBox","stroke","strokeWidth","strokeLinecap","strokeLinejoin","d","onSubmit","type","currentPage","id","ref"],"sourceRoot":""}