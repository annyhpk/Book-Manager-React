{"version":3,"sources":["hooks/useAppSelector.ts","hooks/useInput.ts","modules/actions/book.action.ts","utils/getBooksInfo.ts","componet/BookList/index.tsx","componet/Modal/index.tsx","componet/SearchResultModal/index.tsx","componet/Pagination/index.tsx","page/MainPage/index.tsx"],"names":["useAppSelector","useReduxSelector","useInput","initialData","useState","value","setValue","useCallback","e","target","addBook","createAction","ADD_BOOK","dataToSubmit","bookDataList","Array","isArray","length","map","bookData","amount","payload","delBook","DEL_BOOK","uptBook","UPT_BOOK","getBooksInfo","page","a","baseURL","encodeURI","axios","get","headers","Authorization","process","BookList","searchResultInfo","setSelectedBookList","selectedBookList","onClickBook","isbn","currentTarget","firstChild","textContent","nodeName","includes","prev","filter","selectedIsbn","undefined","book","onClick","className","src","thumbnail","alt","title","status","contents","slice","authors","dayjs","datetime","format","memo","Modal","show","children","onCloseModal","scrollRef","useRef","stopPropagation","onScrollTop","current","scrollTo","top","behavior","ref","xmlns","width","height","viewBox","d","type","fill","stroke","strokeLinecap","strokeLinejoin","strokeWidth","SearchResultModal","setShowSearchResultModal","setSearchResultInfo","searchValue","dispatch","useDispatch","setPage","isEndFlag","setIsEndFlag","onClickNewPageLoad","preventDefault","then","response","data","documents","meta","is_end","catch","error","console","dir","onSubmitBook","selectedBooks","bookInfo","useEffect","onSubmit","Pagination","currentPage","totalPage","history","useHistory","onClickRedirect","push","onClickFirst","onClickLast","onClickNext","nextPage","onClickPrev","prevPage","calculatePages","useMemo","pageGroup","Math","ceil","max","lastPage","calculated","i","fillRule","clipRule","transform","MainPage","useParams","pageNum","parseInt","onChangeSearch","showSearchResultModal","firstArticle","endArticle","booksInfo","state","pageOfbooksInfo","onSearchBook","trim","isNaN","placeholder","onChange","index","to"],"mappings":"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","file":"static/js/5.dceb0b98.chunk.js","sourcesContent":["import { useSelector as useReduxSelector, TypedUseSelectorHook } from 'react-redux';\r\nimport { RootState } from '../modules/reducers';\r\n\r\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useReduxSelector;\r\n","import { ChangeEvent, Dispatch, SetStateAction, useCallback, useState } from 'react';\r\n\r\ntype ReturnTypes<T> = [T, (e: ChangeEvent<HTMLInputElement>) => void, Dispatch<SetStateAction<T>>];\r\n\r\nconst useInput = <T>(initialData: T): ReturnTypes<T> => {\r\n  const [value, setValue] = useState(initialData);\r\n\r\n  const handler = useCallback((e) => {\r\n    setValue(e.target.value);\r\n  }, []);\r\n\r\n  return [value, handler, setValue];\r\n};\r\n\r\nexport default useInput;\r\n","import { createAction } from '@reduxjs/toolkit';\nimport { BookInfo } from '../../typings/resType';\nimport { ADD_BOOK, DEL_BOOK, UPT_BOOK } from './types';\n\nexport const addBook = createAction(ADD_BOOK, function prepare(dataToSubmit: BookInfo[]) {\n  let bookDataList: BookInfo[] = [];\n\n  if (Array.isArray(dataToSubmit) && dataToSubmit.length) {\n    bookDataList = dataToSubmit.map((bookData) => {\n      return { ...bookData, amount: 0 };\n    });\n  }\n\n  return {\n    payload: bookDataList,\n  };\n});\n\nexport const delBook = createAction(DEL_BOOK, function prepare(dataToSubmit: string) {\n  return {\n    payload: dataToSubmit,\n  };\n});\n\nexport const uptBook = createAction(UPT_BOOK, function prepare(dataToSubmit: [number, number]) {\n  return {\n    payload: dataToSubmit,\n  };\n});\n","import axios from 'axios';\r\nimport { ResType } from '../typings/resType';\r\n\r\nconst getBooksInfo = async (page: number, value: string): Promise<ResType> => {\r\n  const baseURL = encodeURI(\r\n    `https://dapi.kakao.com/v3/search/book?target=title&sort=accuracy&page=${page}&size=10&query=${value}`,\r\n  );\r\n  return await axios.get(baseURL, {\r\n    headers: { Authorization: `KakaoAK ${process.env.NODE_ENV}` },\r\n  });\r\n};\r\n\r\nexport default getBooksInfo;\r\n","import dayjs from 'dayjs';\r\nimport React, { FC, memo, useCallback } from 'react';\r\nimport { BookInfo } from '../../typings/resType';\r\n\r\ninterface Props {\r\n  searchResultInfo: BookInfo[] | undefined;\r\n  setSelectedBookList: React.Dispatch<React.SetStateAction<string[]>>;\r\n  selectedBookList: string[];\r\n}\r\n\r\nconst BookList: FC<Props> = ({ searchResultInfo, setSelectedBookList, selectedBookList }: Props) => {\r\n  // 검색된 책 정보 리스트 클릭시 [선택-선택취소] 구현 부분\r\n  const onClickBook = useCallback(\r\n    (e) => {\r\n      const isbn = e.currentTarget.firstChild.textContent;\r\n      if (e.currentTarget && e.currentTarget.firstChild.nodeName === 'TD' && !selectedBookList.includes(isbn)) {\r\n        setSelectedBookList((prev: string[]) => [...prev, isbn]);\r\n      } else {\r\n        setSelectedBookList((prev: string[]) => prev.filter((selectedIsbn) => selectedIsbn !== isbn));\r\n      }\r\n    },\r\n    [selectedBookList, setSelectedBookList],\r\n  );\r\n\r\n  return (\r\n    <>\r\n      {searchResultInfo !== undefined &&\r\n        searchResultInfo?.map((book) => {\r\n          return (\r\n            <tr\r\n              key={book.isbn}\r\n              onClick={onClickBook}\r\n              className={selectedBookList.includes(book.isbn) ? 'bg-green-400 bg-opacity-30 bg-clip-border' : ''}\r\n            >\r\n              {/* 식별을 위한 숨겨진 엘리먼트 */}\r\n              <td className=\"hidden\">{book.isbn}</td>\r\n              <td>\r\n                <img\r\n                  className=\"transform hover:scale-180 sm:hover:scale-400 hover:translate-x-5 z-2 hover:absolute z-10 transition-all shadow-lg\"\r\n                  src={book.thumbnail}\r\n                  alt={book.title}\r\n                />\r\n              </td>\r\n              <td className=\"max-w-sm font-bold pl-4 text-left\">\r\n                {`(${book.status}) ${book.title}`} <br />\r\n                <div className=\"text-gray-400 h-auto text-left font-normal\">{`${book.contents?.slice(0, 50)}...`}</div>\r\n              </td>\r\n              <td>{book.authors[0]}</td>\r\n              <td>{dayjs(book.datetime).format('YYYY-MM-DD')}</td>\r\n            </tr>\r\n          );\r\n        })}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default memo(BookList);\r\n","import React, { FC, useCallback, memo, useRef } from 'react';\r\n\r\ninterface Props {\r\n  show: boolean;\r\n  children: React.ReactNode;\r\n  onCloseModal: () => void;\r\n}\r\n\r\nconst Modal: FC<Props> = ({ show, children, onCloseModal }: Props) => {\r\n  // 스크롤 참조\r\n  const scrollRef = useRef<HTMLDivElement>(null);\r\n\r\n  // 이벤트 전파 막는 함수\r\n  const stopPropagation = useCallback((e) => {\r\n    e.stopPropagation();\r\n  }, []);\r\n\r\n  // 스크롤 맨위로 이동시키는 함수\r\n  const onScrollTop = useCallback(() => {\r\n    scrollRef.current?.scrollTo({ top: 0, behavior: 'smooth' });\r\n  }, []);\r\n\r\n  if (!show) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    // Modal\r\n    <div\r\n      className=\"modal opacity-100 fixed w-full top-0 left-0 flex items-center justify-center\"\r\n      onClick={onCloseModal}\r\n    >\r\n      <div className=\"modal-overlay absolute w-full h-full bg-gray-900 opacity-50\"></div>\r\n\r\n      <div\r\n        className=\"modal-container bg-white w-11/12 h-screen lg:max-w-xl md:max-w-lg mx-auto rounded-xl shadow-lg z-50 overflow-y-auto\"\r\n        onClick={stopPropagation}\r\n        ref={scrollRef}\r\n      >\r\n        {/* <!-- Add margin if you want to see some of the overlay behind the modal-->  */}\r\n        <div className=\"modal-content py-4 text-left px-5\">\r\n          {/* <!--Title--> */}\r\n          <div className=\"flex justify-between items-center pb-3 h-11\">\r\n            <p className=\"text-2xl font-bold\">원하는 도서를 클릭-!</p>\r\n            <div className=\"modal-close cursor-pointer z-50\" onClick={onCloseModal}>\r\n              <svg\r\n                className=\"fill-current text-black\"\r\n                xmlns=\"http://www.w3.org/2000/svg\"\r\n                width=\"18\"\r\n                height=\"18\"\r\n                viewBox=\"0 0 18 18\"\r\n              >\r\n                <path d=\"M14.53 4.53l-1.06-1.06L9 7.94 4.53 3.47 3.47 4.53 7.94 9l-4.47 4.47 1.06 1.06L9 10.06l4.47 4.47 1.06-1.06L10.06 9z\"></path>\r\n              </svg>\r\n            </div>\r\n          </div>\r\n          {/* <!--Body--> */}\r\n          {children}\r\n          {/* <!--footer - fixed btn--> */}\r\n          <div className=\"flex fixed bottom-12 mr-1 h-10 right-9 md:right-1/4 lg:mr-12 xl:right-1/3 xl:mr-24 bg-indigo-300 rounded-xl\">\r\n            <button\r\n              type=\"button\"\r\n              onClick={onScrollTop}\r\n              className=\"px-2 bg-transparent p-3 rounded-xl hover:bg-gray-100 leading-10\"\r\n            >\r\n              <svg\r\n                xmlns=\"http://www.w3.org/2000/svg\"\r\n                className=\"h-6 w-6 pb-0.5\"\r\n                fill=\"none\"\r\n                viewBox=\"0 3 24 24\"\r\n                stroke=\"currentColor\"\r\n              >\r\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M5 11l7-7 7 7M5 19l7-7 7 7\" />\r\n              </svg>\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default memo(Modal);\r\n","import React, { Dispatch, SetStateAction, useCallback, useState, FC, useEffect } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { addBook } from '../../modules/actions/book.action';\r\nimport { BookInfo } from '../../typings/resType';\r\nimport getBooksInfo from '../../utils/getBooksInfo';\r\nimport BookList from '../BookList';\r\nimport Modal from '../Modal';\r\n\r\ninterface Props {\r\n  show: boolean;\r\n  onCloseModal: () => void;\r\n  setShowSearchResultModal: Dispatch<SetStateAction<boolean>>;\r\n  searchResultInfo?: BookInfo[];\r\n  setSearchResultInfo: Dispatch<SetStateAction<BookInfo[]>>;\r\n  searchValue: string;\r\n}\r\n\r\nconst SearchResultModal: FC<Props> = ({\r\n  show,\r\n  onCloseModal,\r\n  setShowSearchResultModal,\r\n  searchResultInfo,\r\n  setSearchResultInfo,\r\n  searchValue,\r\n}: Props) => {\r\n  const dispatch = useDispatch();\r\n  const [selectedBookList, setSelectedBookList] = useState<string[]>([]);\r\n  const [page, setPage] = useState<number>(2);\r\n  const [isEndFlag, setIsEndFlag] = useState<boolean>(false);\r\n\r\n  const onClickNewPageLoad = useCallback(\r\n    (e) => {\r\n      e.preventDefault();\r\n      getBooksInfo(page, searchValue)\r\n        .then((response) => {\r\n          if (setSearchResultInfo !== undefined) {\r\n            setSearchResultInfo((prev) => [...prev, ...response.data.documents]);\r\n            if (response.data.meta.is_end) {\r\n              setIsEndFlag(true);\r\n            }\r\n          }\r\n          setPage((prev) => prev + 1);\r\n        })\r\n        .catch((error) => {\r\n          console.dir(error);\r\n        });\r\n    },\r\n    [page, searchValue, setSearchResultInfo],\r\n  );\r\n\r\n  const onSubmitBook = useCallback(\r\n    (e) => {\r\n      e.preventDefault();\r\n      //선택한 책정보 리덕스에 저장\r\n      if (Array.isArray(searchResultInfo) && searchResultInfo.length) {\r\n        const selectedBooks = searchResultInfo?.filter((bookInfo: BookInfo) =>\r\n          selectedBookList.includes(bookInfo.isbn),\r\n        );\r\n        dispatch(addBook(selectedBooks));\r\n      }\r\n      // 저장 성공시 모달 닫기\r\n      setShowSearchResultModal(false);\r\n      setSelectedBookList([]);\r\n    },\r\n    [dispatch, searchResultInfo, selectedBookList, setShowSearchResultModal],\r\n  );\r\n\r\n  useEffect(() => {\r\n    setIsEndFlag(false);\r\n  }, [show]);\r\n\r\n  return (\r\n    <Modal show={show} onCloseModal={onCloseModal}>\r\n      {show && Array.isArray(searchResultInfo) && !searchResultInfo?.length ? (\r\n        <div>찾으시는 책정보를 찾지 못하였습니다.</div>\r\n      ) : (\r\n        <form onSubmit={onSubmitBook}>\r\n          <table className=\"table-auto text-center border-gray-600 border-t-2\">\r\n            <thead>\r\n              <tr>\r\n                <th>도서</th>\r\n                <th>(상태)도서명</th>\r\n                <th>저자</th>\r\n                <th>출판일</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              <BookList\r\n                searchResultInfo={searchResultInfo}\r\n                setSelectedBookList={setSelectedBookList}\r\n                selectedBookList={selectedBookList}\r\n              />\r\n            </tbody>\r\n          </table>\r\n          {isEndFlag ? (\r\n            <div className=\"h-11 w-full rounded-b-xl bg-gray-300 text-center leading-loose\">마지막 검색결과입니다.</div>\r\n          ) : (\r\n            <button className=\"h-11 w-full rounded-b-xl bg-gray-300\" type=\"button\" onClick={onClickNewPageLoad}>\r\n              결과 더보기\r\n            </button>\r\n          )}\r\n          <div className=\"flex fixed bottom-0.5 mr-1.5 right-9 md:right-1/4 lg:mr-12 xl:right-1/3 xl:mr-14 h-10 bg-green-200 rounded-xl\">\r\n            <button\r\n              type=\"submit\"\r\n              className=\"px-2 bg-transparent p-3 rounded-xl text-gray-700 hover:bg-green-100 hover:text-gray-900 leading-4\"\r\n            >\r\n              도서등록\r\n            </button>\r\n          </div>\r\n        </form>\r\n      )}\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default SearchResultModal;\r\n","import React, { FC, useCallback, useMemo, memo } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\ninterface Props {\r\n  currentPage: number;\r\n  totalPage: number;\r\n}\r\n\r\nconst Pagination: FC<Props> = ({ currentPage, totalPage }: Props) => {\r\n  const history = useHistory();\r\n\r\n  // 페이지 버튼을 누르면 해당페이지로 이동\r\n  const onClickRedirect = useCallback(\r\n    (e) => {\r\n      e.preventDefault();\r\n      history.push(`/books/${e.target.value}`);\r\n    },\r\n    [history],\r\n  );\r\n\r\n  // 처음으로 가기 버튼\r\n  const onClickFirst = useCallback(() => {\r\n    history.push('/books/1');\r\n  }, [history]);\r\n\r\n  // 마지막으로 가기 버튼\r\n  const onClickLast = useCallback(() => {\r\n    history.push(`/books/${totalPage}`);\r\n  }, [history, totalPage]);\r\n\r\n  // 다음페이지 버튼\r\n  const onClickNext = useCallback(() => {\r\n    const nextPage = totalPage > currentPage ? currentPage + 1 : currentPage;\r\n    history.push(`/books/${nextPage}`);\r\n  }, [history, currentPage, totalPage]);\r\n\r\n  // 이전페이지 버튼\r\n  const onClickPrev = useCallback(() => {\r\n    const prevPage = currentPage > 0 ? currentPage - 1 : currentPage;\r\n    history.push(`/books/${prevPage}`);\r\n  }, [history, currentPage]);\r\n\r\n  // 5개의 페이지 그룹을 계산\r\n  const calculatePages: number[] = useMemo(() => {\r\n    const pageCount = 5 as const;\r\n    const pageGroup = Math.ceil(currentPage / pageCount);\r\n\r\n    const max = pageGroup * pageCount;\r\n    const lastPage = max > totalPage ? totalPage : max;\r\n\r\n    const calculated = [];\r\n\r\n    for (let i = pageGroup; i <= lastPage; ++i) {\r\n      calculated.push(i);\r\n    }\r\n\r\n    return calculated;\r\n  }, [currentPage, totalPage]);\r\n\r\n  if (!currentPage) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <div className=\"flex flex-row justify-evenly w-full h-16 py-6 relative left-0 bottom-0 md:-bottom-8 md:px-20 lg:px-56\">\r\n      {/* 처음으로 가는 버튼 */}\r\n      <svg\r\n        xmlns=\"http://www.w3.org/2000/svg\"\r\n        className=\"h-6 w-6 bg-gray-400 rounded-md shadow-md\"\r\n        viewBox=\"0 0 20 20\"\r\n        fill=\"currentColor\"\r\n        onClick={onClickFirst}\r\n      >\r\n        <path\r\n          fillRule=\"evenodd\"\r\n          d=\"M3 3a1 1 0 011 1v12a1 1 0 11-2 0V4a1 1 0 011-1zm7.707 3.293a1 1 0 010 1.414L9.414 9H17a1 1 0 110 2H9.414l1.293 1.293a1 1 0 01-1.414 1.414l-3-3a1 1 0 010-1.414l3-3a1 1 0 011.414 0z\"\r\n          clipRule=\"evenodd\"\r\n        />\r\n      </svg>\r\n      {/* 이전 버튼 */}\r\n      <svg\r\n        xmlns=\"http://www.w3.org/2000/svg\"\r\n        className=\"h-6 w-6 bg-gray-400 rounded-md shadow-md\"\r\n        fill=\"none\"\r\n        viewBox=\"0 0 24 24\"\r\n        stroke=\"currentColor\"\r\n        onClick={onClickPrev}\r\n      >\r\n        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M10 19l-7-7m0 0l7-7m-7 7h18\" />\r\n      </svg>\r\n      {/* Page Group 표시 */}\r\n      {calculatePages?.map((page) => {\r\n        return (\r\n          <button\r\n            key={page}\r\n            className={`h-6 w-6 rounded-md shadow-md ${currentPage === page ? 'bg-gray-500 font-bold' : 'bg-gray-400'}`}\r\n            onClick={onClickRedirect}\r\n            value={page}\r\n          >\r\n            {page}\r\n          </button>\r\n        );\r\n      })}\r\n      {/* 다음 버튼 */}\r\n      <svg\r\n        xmlns=\"http://www.w3.org/2000/svg\"\r\n        className=\"h-6 w-6 bg-gray-400 rounded-md shadow-md\"\r\n        fill=\"none\"\r\n        viewBox=\"0 0 24 24\"\r\n        stroke=\"currentColor\"\r\n        onClick={onClickNext}\r\n      >\r\n        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M14 5l7 7m0 0l-7 7m7-7H3\" />\r\n      </svg>\r\n      {/* 마지막으로 가는 버튼 */}\r\n      <svg\r\n        xmlns=\"http://www.w3.org/2000/svg\"\r\n        className=\"h-6 w-6 bg-gray-400 rounded-md shadow-sm\"\r\n        transform=\"rotate(180)\"\r\n        viewBox=\"0 0 20 20\"\r\n        fill=\"currentColor\"\r\n        onClick={onClickLast}\r\n      >\r\n        <path\r\n          fillRule=\"evenodd\"\r\n          d=\"M3 3a1 1 0 011 1v12a1 1 0 11-2 0V4a1 1 0 011-1zm7.707 3.293a1 1 0 010 1.414L9.414 9H17a1 1 0 110 2H9.414l1.293 1.293a1 1 0 01-1.414 1.414l-3-3a1 1 0 010-1.414l3-3a1 1 0 011.414 0z\"\r\n          clipRule=\"evenodd\"\r\n        />\r\n      </svg>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default memo(Pagination);\r\n","import React, { useCallback, useState, FC, useMemo } from 'react';\nimport { useParams, useHistory, Link } from 'react-router-dom';\nimport { useAppSelector } from '../../hooks/useAppSelector';\nimport useInput from '../../hooks/useInput';\nimport { RootState } from '../../modules/reducers';\nimport { BookInfo } from '../../typings/resType';\nimport SearchResultModal from '../../componet/SearchResultModal';\nimport dayjs from 'dayjs';\nimport Pagination from '../../componet/Pagination';\nimport getBooksInfo from '../../utils/getBooksInfo';\n\nconst MainPage: FC = () => {\n  const history = useHistory();\n  const { page } = useParams<{ page: string }>();\n  const pageNum = parseInt(page);\n\n  // 현재 페이지 상태 정보\n  const [searchValue, onChangeSearch] = useInput<string>('');\n  const [showSearchResultModal, setShowSearchResultModal] = useState<boolean>(false);\n  const [searchResultInfo, setSearchResultInfo] = useState<BookInfo[]>([]);\n\n  // 현재 페이지에 로드할 데이터 범위 계산\n  const [firstArticle, endArticle] = useMemo(() => [(pageNum - 1) * 15, 15 * pageNum], [pageNum]);\n  const booksInfo: BookInfo[] = useAppSelector((state: RootState) => state.book.documents);\n  const pageOfbooksInfo = booksInfo?.slice(firstArticle, endArticle);\n\n  console.dir(pageOfbooksInfo);\n\n  // 페이지당 데이터\n  const dataPerPage = 15 as const;\n  // 전체 페이지 계산\n  const totalPage = useMemo(() => Math.ceil(booksInfo.length / dataPerPage), [booksInfo]);\n\n  // 모달창 닫기\n  const onCloseModal = useCallback(() => {\n    setShowSearchResultModal(false);\n  }, []);\n\n  // 책검색\n  const onSearchBook = useCallback(\n    (e) => {\n      e.preventDefault();\n      if (searchValue.trim() === '' && !searchValue.trim().length) {\n        return null;\n      }\n      getBooksInfo(pageNum, searchValue)\n        .then((response) => {\n          setShowSearchResultModal(true);\n          setSearchResultInfo(response.data.documents);\n        })\n        .catch((error) => {\n          console.dir(error);\n        });\n    },\n    [pageNum, searchValue],\n  );\n\n  if (isNaN(pageNum) || !pageNum || pageNum > totalPage) {\n    history.push('/notFound');\n  }\n\n  return (\n    <div className=\"container pt-8 mx-auto md:pt-16\">\n      <header className=\"flex w-full h-10 justify-around flex-wrap flex-row\">\n        {/* 로고 */}\n        <div className=\"inline-flex flex-nowrap\">\n          <img\n            className=\"mr-3\"\n            width=\"40\"\n            height=\"40\"\n            alt=\"Book Logo\"\n            src=\"https://cdn.pixabay.com/photo/2016/01/23/16/02/book-1157658_960_720.png\"\n          />\n          <b className=\"sm:text-base md:text-3xl\">도서 관리 시스템</b>\n        </div>\n        {/* 책정보 검색창 */}\n        <form className=\"pt-1 h-10\" onSubmit={onSearchBook}>\n          <input\n            className=\"rounded-lg text-center border\"\n            type=\"search\"\n            placeholder=\"도서명으로 검색\"\n            value={searchValue}\n            onChange={onChangeSearch}\n          />\n        </form>\n      </header>\n      <main className=\"flex flex-col mt-8 mx-3 sm:mt-4 md:mx-8 lg:mx-24 justify-center\">\n        <table className=\"table-auto border-separate text-center\">\n          {/* 테이블 헤더 */}\n          <thead>\n            <tr className=\"whitespace-nowrap\">\n              <th>(상태) 도서명</th>\n              <th>글쓴이</th>\n              <th>보유</th>\n              <th>출판일</th>\n            </tr>\n          </thead>\n          {/* 책정보 로드 */}\n          <tbody>\n            {pageOfbooksInfo?.map((book, index) => {\n              return (\n                <tr key={book.isbn}>\n                  <td>\n                    <b>{`[${book.status}]`}</b> <Link to={`/book/${index * pageNum}/${book.isbn}`}>{book.title}</Link>\n                  </td>\n                  <td>{book.authors[0]}</td>\n                  <td>{book.amount}</td>\n                  <td>{dayjs(book.datetime).format('YYYY-MM-DD')}</td>\n                </tr>\n              );\n            })}\n          </tbody>\n        </table>\n      </main>\n      {/* 페이지네이션 부분 */}\n      <Pagination currentPage={pageNum} totalPage={totalPage} />\n\n      {/* 책 검색 결과 모달창 */}\n      <SearchResultModal\n        show={showSearchResultModal}\n        onCloseModal={onCloseModal}\n        setShowSearchResultModal={setShowSearchResultModal}\n        searchResultInfo={searchResultInfo}\n        setSearchResultInfo={setSearchResultInfo}\n        searchValue={searchValue}\n      />\n    </div>\n  );\n};\n\nexport default MainPage;\n"],"sourceRoot":""}