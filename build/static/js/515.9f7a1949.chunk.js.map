{"version":3,"file":"static/js/515.9f7a1949.chunk.js","mappings":"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","sources":["hooks/useAppSelector.ts","utils/getBooksInfo.ts","page/MainPage/index.tsx"],"sourcesContent":["import { useSelector as useReduxSelector, TypedUseSelectorHook } from 'react-redux';\r\nimport { RootState } from '../modules/reducers';\r\n\r\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useReduxSelector;\r\n","import axios from 'axios';\r\nimport { ResType } from '../typings/resType';\r\n\r\nconst getBooksInfo = async (page: number, value: string): Promise<ResType> => {\r\n  const baseURL = encodeURI(\r\n    `https://dapi.kakao.com/v3/search/book?target=title&sort=accuracy&page=${page}&size=10&query=${value}`,\r\n  );\r\n  return await axios.get(baseURL, {\r\n    headers: { Authorization: `KakaoAK ${process.env.KAKAO_API_KEY}` },\r\n  });\r\n};\r\n\r\nexport default getBooksInfo;\r\n","import React, { useCallback, useState, FC, useMemo, useRef, useEffect } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport { BookInfo } from '../../typings/resType';\nimport { RootState } from '../../modules/reducers';\n\nimport { useAppSelector } from '../../hooks/useAppSelector';\nimport getBooksInfo from '../../utils/getBooksInfo';\n\nconst SearchResultModal = React.lazy(() => import('../../components/SearchResultModal'));\nconst Pagination = React.lazy(() => import('../../components/Pagination'));\nconst MainBookList = React.lazy(() => import('../../components/MainBookList'));\nconst SearchInput = React.lazy(() => import('../../components/SearchInput'));\n\nconst MainPage: FC = () => {\n  const navigate = useNavigate();\n  const { page } = useParams<{ page: string }>();\n  const pageNum = useMemo(() => parseInt(page || '1'), [page]);\n\n  // 현재 페이지 상태 정보\n  const [searchValue, setSearchValue] = useState<string>('');\n  const [searchResultInfo, setSearchResultInfo] = useState<BookInfo[]>([]);\n  const modalRef = useRef<HTMLDialogElement>(null);\n\n  // 다크 모드\n  const [darkMode, setDarkMode] = useState<boolean>(false);\n\n  // 현재 페이지에 로드할 데이터 범위 계산\n  const [firstArticle, endArticle] = useMemo(() => [(pageNum - 1) * 15, 15 * pageNum], [pageNum]);\n  const booksInfo = useAppSelector((state: RootState) => {\n    const booksInfoPerPage = Object.values(state.book.documents).slice(firstArticle, endArticle);\n    const totalBook = Object.keys(state.book.documents).length;\n\n    return {\n      booksInfo: booksInfoPerPage,\n      length: totalBook,\n    };\n  });\n  const pageOfBooksInfo = useMemo(() => booksInfo.booksInfo, [booksInfo]);\n\n  // 페이지당 데이터\n  const dataPerPage = useMemo(() => 15 as const, []);\n  // 전체 페이지 계산\n  const totalPage = useMemo(() => Math.ceil(booksInfo.length / dataPerPage), [booksInfo.length, dataPerPage]);\n\n  // 모달창 닫기\n  const onCloseModal = useCallback(() => {\n    modalRef.current?.removeAttribute('open');\n  }, []);\n\n  const onClickDarkMode = useCallback(() => {\n    document.body.classList.toggle('dark');\n    setDarkMode((prev) => !prev);\n  }, []);\n\n  // 책정보 요청 함수\n  const bookDataLoad = useCallback(\n    (pageNum: number, searchQuery = searchValue) => {\n      return getBooksInfo(pageNum, searchQuery)\n        .then((response) => {\n          setSearchResultInfo((prev) => [...prev, ...response.data.documents]);\n          // 마지막 페이지 여부 전달\n          return response.data.meta.is_end;\n        })\n        .catch((err) => {\n          throw new Error('BookDataLoad job result failed', { cause: err });\n        });\n    },\n    [searchValue, setSearchResultInfo],\n  );\n\n  // 책검색\n  const onSearchBook = useCallback(\n    async (e: React.FormEvent<HTMLFormElement>) => {\n      e.preventDefault();\n      const formData = new FormData(e.currentTarget);\n      const searchQuery = formData.get('searchValue') as string;\n      if (searchQuery.trim() === '' && !searchQuery.trim().length) {\n        return null;\n      }\n      setSearchResultInfo([]);\n      setSearchValue(searchQuery);\n      try {\n        // 책정보 정보 로드\n        await bookDataLoad(pageNum, searchQuery);\n        // 모달창 오픈\n        modalRef.current?.setAttribute('open', 'true');\n      } catch (error) {\n        if (error instanceof Error) console.log(`Caused by ${error?.cause}`);\n      }\n    },\n    [bookDataLoad, pageNum, setSearchValue],\n  );\n\n  if (isNaN(pageNum) || !pageNum || pageNum > totalPage) {\n    navigate('/notFound');\n  }\n\n  useEffect(() => {\n    if (window.matchMedia && window.matchMedia('(prefers-color-scheme: dark)').matches) {\n      document.body.classList.add('dark');\n      document.querySelector('#default-toggle')?.setAttribute('checked', 'checked');\n      setDarkMode((prev) => !prev);\n    }\n  }, []);\n\n  return (\n    <div className=\"h-screen pt-8 mx-0 md:pt-16 bg-ivory dark:bg-darkBlue dark:text-gray-100\">\n      <div className=\"flex flex-row-reverse\">\n        <label htmlFor=\"default-toggle\" className=\"inline-flex relative items-center cursor-pointer\">\n          <input type=\"checkbox\" value=\"\" id=\"default-toggle\" className=\"sr-only peer\" onClick={onClickDarkMode} />\n          <div className=\"w-11 h-6 bg-gray-200 peer-focus:outline-none peer-focus:ring-4 peer-focus:ring-blue-300 dark:peer-focus:ring-blue-800 rounded-full peer dark:bg-gray-700 peer-checked:after:translate-x-full peer-checked:after:border-white after:content-[''] after:absolute after:top-[2px] after:left-[2px] after:bg-white after:border-gray-300 after:border after:rounded-full after:h-5 after:w-5 after:transition-all dark:border-gray-600 peer-checked:bg-blue-600\"></div>\n        </label>\n        <span id=\"dark-mode-text\" className=\"ml-3 text-sm pr-2 font-medium text-gray-900 dark:text-gray-300\">\n          {darkMode ? (\n            <svg\n              xmlns=\"http://www.w3.org/2000/svg\"\n              className=\"h-6 w-6\"\n              fill=\"none\"\n              viewBox=\"0 0 24 24\"\n              stroke=\"currentColor\"\n              strokeWidth={2}\n            >\n              <path\n                strokeLinecap=\"round\"\n                strokeLinejoin=\"round\"\n                d=\"M12 3v1m0 16v1m9-9h-1M4 12H3m15.364 6.364l-.707-.707M6.343 6.343l-.707-.707m12.728 0l-.707.707M6.343 17.657l-.707.707M16 12a4 4 0 11-8 0 4 4 0 018 0z\"\n              />\n            </svg>\n          ) : (\n            <svg\n              xmlns=\"http://www.w3.org/2000/svg\"\n              className=\"h-6 w-6\"\n              fill=\"none\"\n              viewBox=\"0 0 24 24\"\n              stroke=\"currentColor\"\n              strokeWidth={2}\n            >\n              <path\n                strokeLinecap=\"round\"\n                strokeLinejoin=\"round\"\n                d=\"M20.354 15.354A9 9 0 018.646 3.646 9.003 9.003 0 0012 21a9.003 9.003 0 008.354-5.646z\"\n              />\n            </svg>\n          )}\n        </span>\n      </div>\n\n      <header className=\"flex w-full h-10 justify-around flex-wrap flex-row\">\n        {/* 로고 */}\n        <div className=\"inline-flex flex-nowrap\">\n          <svg\n            xmlns=\"http://www.w3.org/2000/svg\"\n            className=\"h-6 w-6\"\n            fill=\"none\"\n            viewBox=\"0 0 24 24\"\n            stroke=\"currentColor\"\n            strokeWidth={2}\n          >\n            <path\n              strokeLinecap=\"round\"\n              strokeLinejoin=\"round\"\n              d=\"M12 6.253v13m0-13C10.832 5.477 9.246 5 7.5 5S4.168 5.477 3 6.253v13C4.168 18.477 5.754 18 7.5 18s3.332.477 4.5 1.253m0-13C13.168 5.477 14.754 5 16.5 5c1.747 0 3.332.477 4.5 1.253v13C19.832 18.477 18.247 18 16.5 18c-1.746 0-3.332.477-4.5 1.253\"\n            />\n          </svg>\n          <b className=\"sm:text-base md:text-3xl\">도서 관리 시스템</b>\n        </div>\n        {/* 책정보 검색창 */}\n        <form className=\"pt-1 h-10\" onSubmit={onSearchBook}>\n          <SearchInput />\n          <button\n            className=\"g-white dark:text-gray-100 hover:bg-gray-100 font-semibold py-0.7 px-3 border border-gray-400 rounded shadow\"\n            type=\"submit\"\n          >\n            검색\n          </button>\n        </form>\n      </header>\n      <main className=\"Container flex flex-col mt-8 mx-3 sm:mt-4 md:mx-8 lg:mx-24 justify-center\">\n        <table className=\"table-auto border-separate text-center\">\n          {/* 테이블 헤더 */}\n          <thead>\n            <tr className=\"whitespace-nowrap\">\n              <th>(상태) 도서명</th>\n              <th>글쓴이</th>\n              <th>보유</th>\n              <th>출판일</th>\n            </tr>\n          </thead>\n          {/* 책정보 로드 */}\n          <tbody>\n            <MainBookList pageOfBooksInfo={pageOfBooksInfo} pageNum={pageNum} />\n          </tbody>\n        </table>\n      </main>\n      {/* 페이지네이션 부분 */}\n      <Pagination currentPage={pageNum} totalPage={totalPage} />\n\n      {/* 책 검색 결과 모달창 */}\n      <dialog id=\"dialog\" ref={modalRef}>\n        <SearchResultModal\n          onCloseModal={onCloseModal}\n          searchResultInfo={searchResultInfo}\n          bookDataLoad={bookDataLoad}\n        />\n      </dialog>\n    </div>\n  );\n};\n\nexport default MainPage;\n"],"names":["useAppSelector","useReduxSelector","getBooksInfo","page","value","baseURL","encodeURI","axios","headers","Authorization","process","KAKAO_API_KEY","SearchResultModal","React","Pagination","MainBookList","SearchInput","navigate","useNavigate","useParams","pageNum","useMemo","parseInt","useState","searchValue","setSearchValue","searchResultInfo","setSearchResultInfo","modalRef","useRef","darkMode","setDarkMode","firstArticle","endArticle","booksInfo","state","Object","values","book","documents","slice","length","keys","pageOfBooksInfo","dataPerPage","totalPage","Math","ceil","onCloseModal","useCallback","current","removeAttribute","onClickDarkMode","document","body","classList","toggle","prev","bookDataLoad","searchQuery","then","response","data","meta","is_end","catch","err","Error","cause","onSearchBook","e","preventDefault","formData","FormData","currentTarget","get","trim","setAttribute","console","log","isNaN","useEffect","window","matchMedia","matches","add","querySelector","className","htmlFor","type","id","onClick","xmlns","fill","viewBox","stroke","strokeWidth","strokeLinecap","strokeLinejoin","d","onSubmit","currentPage","ref"],"sourceRoot":""}