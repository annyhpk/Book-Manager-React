{"version":3,"file":"static/js/218.11b2371c.chunk.js","mappings":"2LAKMA,EAAWC,EAAAA,MAAW,kBAAM,iCAC5BC,EAAQD,EAAAA,MAAW,kBAAM,gCAwF/B,UAjFqC,SAAC,GAA6D,IAA3DE,EAA0D,EAA1DA,aAAcC,EAA4C,EAA5CA,iBAAkBC,EAA0B,EAA1BA,aAChEC,GAAWC,EAAAA,EAAAA,MACjB,GAAgDC,EAAAA,EAAAA,UAAmB,IAAnE,eAAOC,EAAP,KAAyBC,EAAzB,KACA,GAAwBF,EAAAA,EAAAA,UAAiB,GAAzC,eAAOG,EAAP,KAAaC,EAAb,KACA,GAAkCJ,EAAAA,EAAAA,WAAkB,GAApD,eAAOK,EAAP,KAAkBC,EAAlB,KAEMC,GAAqBC,EAAAA,EAAAA,aAAW,mCACpC,WAAOC,GAAP,8EACEA,EAAEC,iBADJ,kBAGwBb,EAAaM,GAHrC,OAGUQ,EAHV,OAIIL,EAAaK,GACbP,GAAQ,SAACQ,GAAD,OAAUA,EAAO,KAL7B,gDAOQ,gBAAiBC,OAAOC,QAAQC,IAAR,sDAAyB,KAAOC,QAPhE,yDADoC,sDAWpC,CAACnB,EAAcM,IAGXc,GAAeT,EAAAA,EAAAA,cACnB,SAACC,GAGC,GAFAA,EAAEC,iBAEEQ,MAAMC,QAAQvB,IAAqBA,EAAiBwB,OAAQ,CAC9D,IAAMC,EAAa,OAAGzB,QAAH,IAAGA,OAAH,EAAGA,EAAkB0B,QAAO,SAACC,GAAD,OAC7CtB,EAAiBuB,SAASD,EAASE,SAErC3B,GAAS4B,EAAAA,EAAAA,IAAQL,IAGnB1B,IACAO,EAAoB,MAEtB,CAACJ,EAAUH,EAAcC,EAAkBK,IAG7C,OACE,SAACP,EAAD,CAAOC,aAAcA,EAArB,UACGuB,MAAMC,QAAQvB,IAAqB,OAACA,QAAD,IAACA,GAAAA,EAAkBwB,QAGrD,kBAAMO,SAAUV,EAAhB,WACE,mBAAOW,UAAU,mEAAjB,WACE,kBAAOA,UAAU,iCAAjB,UACE,2BACE,0CACA,8DACA,0CACA,qDAGJ,4BACE,SAACpC,EAAD,CACEI,iBAAkBA,EAClBM,oBAAqBA,EACrBD,iBAAkBA,SAIvBI,GACC,gBAAKuB,UAAU,iEAAf,6EAEA,mBAAQA,UAAU,uCAAuCC,KAAK,SAASC,QAASvB,EAAhF,8CAIF,gBAAKqB,UAAU,gHAAf,UACE,mBACEC,KAAK,SACLD,UAAU,oGAFZ,4CA5BJ","sources":["components/SearchResultModal/index.tsx"],"sourcesContent":["import React, { useCallback, useState, FC } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { addBook } from '../../modules/actions/book.action';\nimport { BookInfo } from '../../typings/resType';\n\nconst BookList = React.lazy(() => import('../ModalSearchBookList'));\nconst Modal = React.lazy(() => import('../Modal'));\ninterface Props {\n  onCloseModal: () => void;\n  searchResultInfo?: BookInfo[];\n  bookDataLoad: (page: number) => Promise<boolean>;\n}\n\nconst SearchResultModal: FC<Props> = ({ onCloseModal, searchResultInfo, bookDataLoad }: Props) => {\n  const dispatch = useDispatch();\n  const [selectedBookList, setSelectedBookList] = useState<string[]>([]);\n  const [page, setPage] = useState<number>(2);\n  const [isEndFlag, setIsEndFlag] = useState<boolean>(false);\n\n  const onClickNewPageLoad = useCallback(\n    async (e: React.MouseEvent<HTMLButtonElement>) => {\n      e.preventDefault();\n      try {\n        const isEnd = await bookDataLoad(page);\n        setIsEndFlag(isEnd);\n        setPage((prev) => prev + 1);\n      } catch (error) {\n        if (error instanceof Error) console.log(`Caused by ${error?.cause}`);\n      }\n    },\n    [bookDataLoad, page],\n  );\n\n  const onSubmitBook = useCallback(\n    (e: React.FormEvent<HTMLFormElement>) => {\n      e.preventDefault();\n      //선택한 책정보 리덕스에 저장\n      if (Array.isArray(searchResultInfo) && searchResultInfo.length) {\n        const selectedBooks = searchResultInfo?.filter((bookInfo: BookInfo) =>\n          selectedBookList.includes(bookInfo.isbn),\n        );\n        dispatch(addBook(selectedBooks));\n      }\n      // 저장 성공시 모달 닫기\n      onCloseModal();\n      setSelectedBookList([]);\n    },\n    [dispatch, onCloseModal, searchResultInfo, selectedBookList],\n  );\n\n  return (\n    <Modal onCloseModal={onCloseModal}>\n      {Array.isArray(searchResultInfo) && !searchResultInfo?.length ? (\n        <div>찾으시는 책정보를 찾지 못하였습니다.</div>\n      ) : (\n        <form onSubmit={onSubmitBook}>\n          <table className=\"table-auto text-center border-gray-600 border-t-2 cursor-pointer\">\n            <thead className=\"sticky top-9 bg-slate-200 z-50\">\n              <tr>\n                <th>도서</th>\n                <th>(상태)도서명</th>\n                <th>저자</th>\n                <th>출판일</th>\n              </tr>\n            </thead>\n            <tbody>\n              <BookList\n                searchResultInfo={searchResultInfo}\n                setSelectedBookList={setSelectedBookList}\n                selectedBookList={selectedBookList}\n              />\n            </tbody>\n          </table>\n          {isEndFlag ? (\n            <div className=\"h-11 w-full rounded-b-xl bg-gray-300 text-center leading-loose\">마지막 검색결과입니다.</div>\n          ) : (\n            <button className=\"h-11 w-full rounded-b-xl bg-gray-300\" type=\"button\" onClick={onClickNewPageLoad}>\n              결과 더보기\n            </button>\n          )}\n          <div className=\"flex fixed bottom-0.5 mr-1.5 right-9 md:right-1/4 lg:mr-12 xl:right-1/3 xl:mr-14 h-10 bg-green-200 rounded-xl\">\n            <button\n              type=\"submit\"\n              className=\"px-2 bg-transparent p-3 rounded-xl text-gray-700 hover:bg-green-100 hover:text-gray-900 leading-4\"\n            >\n              도서등록\n            </button>\n          </div>\n        </form>\n      )}\n    </Modal>\n  );\n};\n\nexport default SearchResultModal;\n"],"names":["BookList","React","Modal","onCloseModal","searchResultInfo","bookDataLoad","dispatch","useDispatch","useState","selectedBookList","setSelectedBookList","page","setPage","isEndFlag","setIsEndFlag","onClickNewPageLoad","useCallback","e","preventDefault","isEnd","prev","Error","console","log","cause","onSubmitBook","Array","isArray","length","selectedBooks","filter","bookInfo","includes","isbn","addBook","onSubmit","className","type","onClick"],"sourceRoot":""}